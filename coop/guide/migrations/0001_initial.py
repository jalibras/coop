# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-13 12:14
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import members.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('area_type', models.CharField(choices=[('natural', 'natural'), ('artificial', 'artificial')], default='artificial', max_length=15)),
            ],
            bases=(models.Model, members.mixins.PermissionMixin),
        ),
        migrations.CreateModel(
            name='AreaImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.FileField(blank=True, null=True, upload_to='uploads')),
            ],
            bases=(models.Model, members.mixins.PermissionMixin),
        ),
        migrations.CreateModel(
            name='BaseProblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(blank=True, choices=[('?', '?'), ('3', '3'), ('3+', '3+'), ('4', '4'), ('4+', '4+'), ('5', '5'), ('5+', '5+'), ('6A', '6A'), ('6A+', '6A+'), ('6B', '6B'), ('6B+', '6B+'), ('6C', '6C'), ('6C+', '6C+'), ('7A', '7A'), ('7A+', '7A+'), ('7B', '7B'), ('7B+', '7B+'), ('7C', '7C'), ('7C+', '7C+')], default='?', help_text='We use the Font grading system for bouldering problems', max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('exists', models.BooleanField(default=True)),
                ('approved', models.BooleanField(default=True)),
            ],
            bases=(models.Model, members.mixins.PermissionMixin),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
            bases=(models.Model, members.mixins.PermissionMixin),
        ),
        migrations.CreateModel(
            name='ProblemByMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProblemImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.FileField(blank=True, null=True, upload_to='uploads')),
            ],
            bases=(models.Model, members.mixins.PermissionMixin),
        ),
        migrations.CreateModel(
            name='ProblemVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embed_code', models.CharField(max_length=1000)),
            ],
            bases=(models.Model, members.mixins.PermissionMixin),
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='guide.Area')),
            ],
        ),
        migrations.CreateModel(
            name='ArtificialProblem',
            fields=[
                ('baseproblem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='guide.BaseProblem')),
                ('date', models.DateField(blank=True, help_text='The date on which the problem was set (if known)', null=True)),
                ('holds', models.CharField(blank=True, choices=[('Black', 'Black'), ('Blue', 'Blue'), ('Brown', 'Brown'), ('Cappucino', 'Cappucino'), ('Green', 'Green'), ('Green (Dark)', 'Green (Dark)'), ('Green (Flouro)', 'Green (Flouro)'), ('Grey', 'Grey'), ('Mint', 'Mint'), ('Orange', 'Orange'), ('Pink', 'Pink'), ('Purple', 'Purple'), ('Red', 'Red'), ('Red (Dark)', 'Red (Dark)'), ('Red (Rust)', 'Red (Rust)'), ('White', 'White'), ('Wooden', 'Wooden'), ('Yellow', 'Yellow'), ('Yellow (Flouro)', 'Yellow (Flouro)'), ('N/A (see description)', 'N/A (see description)')], max_length=300, null=True, verbose_name='hold colour')),
                ('setter', models.CharField(blank=True, max_length=300, null=True)),
            ],
            bases=('guide.baseproblem',),
        ),
        migrations.CreateModel(
            name='NaturalProblem',
            fields=[
                ('baseproblem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='guide.BaseProblem')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('first_ascensionist', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('guide.baseproblem',),
        ),
    ]
